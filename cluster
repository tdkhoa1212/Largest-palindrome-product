import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style
import warnings
from math import sqrt
from collections import Counter
style.use('fivethirtyeight')

def k_nearest_neighbors(data, predict, k=3):
    if len(data) >= k:
        warnings.warn('K is set to a value less than total voting groups!')
        
    distances = []
    for group in data:
        for features in data[group]:
            euclidean_distance = np.linalg.norm(np.array(features)-np.array(predict))
            distances.append([euclidean_distance,group])

    
    votes = [i[1] for i in sorted(distances)[:k]]
    vote_result = Counter(votes).most_common(2)[0][0]
    
    return vote_result

dataset = {'k':[[1,2],[2,3],[3,1]], 'r':[[6,5],[7,7],[8,6]]}

# two or many point----------------------------------------
new_features = [[5,7], [3, 3]]
#----------------------------------------------------------

sub_results = []
results = {}
for sub_new_features in new_features:
    sub_results.append(k_nearest_neighbors(dataset, sub_new_features))

for i in range(len(sub_results)):
    results[sub_results[i]] = new_features[i] 
print(results)

[[plt.scatter(ii[0],ii[1],s=100,color=i) for ii in dataset[i]] for i in dataset]
[[plt.scatter(features, features, s=50, color = data) for features in results[data]] for data in results] 

plt.show()
